#!/usr/bin/env bash
CMD=$1

source ./src/includes.sh

if [[ $CMD == "init" ]]; then
	laradock_composer_install
	laradock_init_files "-i"
	echo "Laradock initialized!"
fi

if [[ $CMD == "up" ]]; then
	laradock_generate
	laradock_compose up -d --remove-orphans ${@:2}
	laradock_info
fi

if [[ $CMD == "info" ]]; then
	laradock_info
fi

if [[ $CMD == "ssh" ]]; then
	laradock_compose exec -u laradock workspace $(cat ./var/shell)
fi

if [[ $CMD == "root" ]]; then
	laradock_compose exec -u root workspace bash
fi

if [[ $CMD == "down" ]]; then
	laradock_compose down ${@:2}
fi

if [[ $CMD == "ps" ]]; then
	laradock_compose ps ${@:2}
fi

if [[ $CMD == "logs" ]]; then
	laradock_compose logs ${@:2}
fi

if [[ $CMD == "exec" ]]; then
	laradock_compose exec ${@:2}
fi

if [[ $CMD == "restart" ]]; then
	laradock_compose restart ${@:2}
fi

if [[ $CMD == "rebuild" ]]; then
	laradock_generate
	laradock_compose build --pull --force-rm
	laradock_compose up -d --remove-orphans
fi

if [[ $CMD == "upgrade" ]]; then
	git fetch
	git reset --hard origin/master

	# load fresh functions
	source ./src/includes.sh

	# copy example config files that are missed only
	# existing ones will be preserved
	laradock_init_files "-n"
	laradock_composer_install
	laradock_generate
	laradock_compose build --pull --force-rm
	laradock_compose up -d --remove-orphans
	echo "Laradock upgraded!"
fi
